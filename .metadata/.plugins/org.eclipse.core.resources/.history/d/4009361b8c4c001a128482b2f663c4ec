import java.sql.*;

public class dbtest {
	public static void main(String args[]){
		
		 Connection conn = null;//Drivermanager에 등록된 각 드라이버를 getConnection메소드로 식별해서 url 식별자와 같은 것 찾아서 mapping
		 Statement stmt = null;//sql쿼리 생성, 실행
		 PreparedStatement pstmt = null;//statement클래스의 기능향상(코드 안전성 굿, 매개변수 set으로 코드량 증가)
		 ResultSet rs = null;//executeQery()메소드를 결과로 rs결과 반환(원하는 데이터 추출)
		
			try {
				//DB 종료에 따른 JDBC DRIVER 클래스
				Class.forName("com.mysql.jdbc.Driver");
				//DB접속 url
				String url="jdbc:mysql://192.168.0.100:10633/backup_1212?characterEncoding=UTF-8&serverTimezone=Asia/Seoul";
				//DB접속 ID
				String user = "test";
				//DB접속 PW
				String password = "0725";
				//접속 정보로 JDBC연결 커넥션 생성
				conn = DriverManager.getConnection(url, user, password);
				
				//3.delete 2번 where 
				//tbzone 학교, 학교이름 tbzone2 학교에 있는 건물단위, tbzone3 건물 안에 있는 강의실 단위
				
				//1.한성대 시설리스트 이름이랑 시설(join해야함 시설나오는 zone2랑) 뽑아오기
				String sql = "select t1.zonenm,t2.zone2nm from tb_zone as t1 join tb_zone2 as t2 on t1.seq = t2.seq where t1.zonenm in(?)";
				pstmt = conn.prepareStatement(sql);//PrepareStatement객체 생성
				//2.inert 대학  건물 강의실 전부 넣기
				String sql2 = "insert into tb_zone (zonenm, zonenmEn, available, seq_area, type, addr, email) values (?, ?, ?, ?, ?, ?, ?)";
				pstmt = conn.prepareStatement(sql2);
				
				//pstmt.setString(1,"first");//where절 first일때 
				//1.
				//pstmt.setString(1, "한성대학교");
				//2.
				pstmt.setString(1,"서울대학교");
				pstmt.setString(2,"SEOUL UNIVERSITY");
				pstmt.setString(3,"0");
				pstmt.setString(4,"2");
				pstmt.setString(5,"2");
				pstmt.setString(6,"08826 서울시 관악구 관악로 1 서울대학교");
				pstmt.setString(7,"seouluniv@naver.com");
				rs = pstmt.executeQuery();//PrepareStatement객체 생성 후 executeQuery()메소드 사용해 쿼리 처리
				while(rs.next()) {
					//1.
					/*System.out.print(rs.getString("zonenm"));
					System.out.print(" | ");
					System.out.println(rs.getString("zone2nm"));*/
					//2.
					String seq = rs.getString("seq");
					String zonenm= rs.getString("zonenm");
					System.out.println();
					
				}
				rs.close();
				pstmt.close();
				conn.close();
			}catch(Exception e) {
				e.printStackTrace();
			}	
	}//mainS
}
