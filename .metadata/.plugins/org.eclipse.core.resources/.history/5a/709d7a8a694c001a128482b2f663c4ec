import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.sql.*;

public class dbtest {
	public static void main(String args[]){
		
		 Connection conn = null;//Drivermanager에 등록된 각 드라이버를 getConnection메소드로 식별해서 url 식별자와 같은 것 찾아서 mapping
		 Statement stmt = null;//sql쿼리 생성, 실행
		 PreparedStatement pstmt = null;//statement클래스의 기능향상(코드 안전성 굿, 매개변수 set으로 코드량 증가)
		 ResultSet rs = null;//executeQery()메소드를 결과로 rs결과 반환(원하는 데이터 추출)
		
			try {
				//DB 종료에 따른 JDBC DRIVER 클래스
				Class.forName("com.mysql.jdbc.Driver");
				//DB접속 url
				String url="jdbc:mysql://localhost:3306/dbtest?characterEncoding=UTF-8&serverTimezone=UTC";
				//DB접속 ID
				String user = "root";
				//DB접속 PW
				String password = "1234";
				//접속 정보로 JDBC연결 커넥션 생성
				conn = DriverManager.getConnection(url, user, password);
				//System.out.println("1");
				/*
				String userId, userPw, userName;
				String sql;
				
				
				//문자들을 버퍼에 저장하고 읽을라고 씀(엔터만 경계로 인식하고 받은 데이터 String으로 고정)
				BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
				
				System.out.println("테이블에서 원하는거 찾고싶니 해보렴");
				
				System.out.print("ID : ");
				userId = br.readLine();
				System.out.print("pw : ");
				userPw = br.readLine();
				System.out.print("name : ");
				userName = br.readLine();
				
				sql = "select * from tb_user where userId like ? and userPw like ? and userName like ?";
				pstmt = conn.prepareStatement(sql);
				
				if(userId.equals("")) userId = "%";
				if(userPw.equals("")) userPw = "%";
				if(userName.equals("")) userName = "%";
				
				pstmt.setString(1, "second");
				pstmt.setString(2, "1234");
				pstmt.setString(3, "secondUser");
				
				//PreparedStatement객체의 executeQuery()메소드 데이터 검색
				rs = pstmt.executeQuery();
				System.out.println("\n\n -----검색 결과 출력 ----");
				*/
				
				String sql = "select * from tb_user";//query 날려버리깅~
				pstmt = conn.prepareStatement(sql);//sql쿼리 생성, 실행
				
				System.out.println("-----유저목록-----");
			rs = pstmt.executeQuery();//PrepareStatement객체 생성 후 executeQuery()메소드 사용해 쿼리 처리
				
				while(rs.next()) {
					System.out.println(rs.getString("userId"));
					System.out.println(rs.getString("userPw"));
					System.out.println(rs.getString("userName"));
				}
				rs.close();//rs객체 닫아버려~~~
				pstmt.close();//pstmt도 닫으렴
				conn.close();	//conn객체도오오오
			}catch(Exception e) {
				e.printStackTrace();
			}	
	}//mainS
}
